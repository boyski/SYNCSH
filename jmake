#!/usr/bin/perl

# Demo/convenience wrapper for syncsh. All it does is set
# a couple of env vars and then exec "make SHELL=syncsh ...".

use Cwd qw(realpath);
use File::Basename;
use Getopt::Long qw(:config pass_through no_ignore_case);

# Parse out a special flag (-V) unused by GNU make, which 
# specifies verbose mode (basically overriding the @ prefix).
my %opt;
GetOptions(\%opt, 'Verbose:s');
$ENV{SYNCSH_VERBOSE} ||= $opt{Verbose} || '' if exists($opt{Verbose});
unshift(@ARGV, '-s') if exists($ENV{SYNCSH_VERBOSE});

my $make = 'gmake';
my $syncsh = sprintf "SHELL=%s/syncsh", dirname($0);
#$ENV{MAKE} ||= $make;
#$ENV{SYNCSH_SHELL} ||= '/bin/bash';
#printf STDERR "+ %s $syncsh @ARGV\n", $make;
exit(2) if system($make, $syncsh, @ARGV);
